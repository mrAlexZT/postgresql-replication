type: update
id: postgres-master-slave-auto-cluster
baseUrl: https://raw.githubusercontent.com/sych74/postgresql-replication/master
logo: /images/postgres-70x70.png
name: PostgreSQL Master-Slave Auto-Cluster

targetNodes: none
nodeGroupAlias:
  ${settings.nodeGroup}: sqldb
  
onInstall: init

onAfterScaleOut[sqldb]:
  - cmd[${nodes.sqldb.master.id}]: |-
      jcm getPswd
  - cmd[${event.response.nodes.join(id,)}]: |-
      jcm setPswd ${globals.pswd}
      jcm initSlave ${nodes.sqldb.master.address} &>> /var/log/run.log

onAfterClone:
  - script: delete MANIFEST.id; return {result:0, jps:MANIFEST};
  - install: ${response.jps}
    envName: ${event.response.env.envName}    
    settings: 
      nodeGroup: ${settings.nodeGroup}      
      clone: true    

onAfterMigrate:
  init: 
    update: true

actions:
  init:
    #- env.control.AddContainerEnvVars[sqldb]:
    #    vars: {"KEY_PASS":"${fn.password}"}
    - if (${settings.clone:false} || ${this.update:false}):
      - cmd[${nodes.sqldb.master.id}]: |-
          jcm clearReplicaHosts
      - forEach(nodes.sqldb):
          - if (${@i.id} != ${nodes.sqldb.master.id}): 
            - cmd[${nodes.sqldb.master.id}]: |-
                jcm addReplicaHost ${@i.address} &>> /var/log/run.log
            - cmd[${@i.id}]: |-
                jcm updateReplicaHost ${nodes.sqldb.master.address} &>> /var/log/run.log                
    - else: 
      - cmd[${nodes.sqldb.master.id}]: |-
          jcm initMaster &>> /var/log/run.log
          jcm getPswd
      - setGlobals: 
          pswd: ${response.out}    
      - forEach(nodes.sqldb):
          - if (${@i.id} != ${nodes.sqldb.master.id}): 
            - cmd[${nodes.sqldb.master.id}]: |-
                jcm addReplicaHost ${@i.address} &>> /var/log/run.log
            - cmd[${@i.id}]: |-
                jcm setPswd ${globals.pswd}
                jcm ${globals.cmd:initSlave} ${nodes.sqldb.master.address} &>> /var/log/run.log

startPage: ${nodes.sqldb.master.url}
success: |
  **Admin Panel**: [${nodes.sqldb.master.url}](${nodes.sqldb.master.url})  
  **User**: webadmin  
  **Password**: ${globals.pswd}  

  * [Database Replication with PostgreSQL](https://docs.jelastic.com/postgresql-database-replication/)
  * [Remote Access to PostgreSQL](https://docs.jelastic.com/remote-access-postgres/)
  * [Import and Export Dump to PostgreSQL](https://docs.jelastic.com/dump-postgres/)

  
